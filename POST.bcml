djangoのrequest.POSTで送られてきたデータを取得

djangoでフォームでデータを送ってそのデータをprintで出力してみましょう。
printで出力したデータはpython manage.py runserverのログでみれます。

@h3 ソースコード
polls/templates/polls/test.html
@(pre.[brush:html] 
<form action="/polls/test" method="POST">{% csrf_token %}
	<label for="text">text:</label>
	<input type="text" id="text" name="text">
	<label for="number">number:</label>
	<input type="number" id="number" name="number">
	<input type="submit">
</form>
)@

polls/views.py
@(pre.[brush:python] 
# -*- coding: utf-8 -*-
from django.shortcuts import render_to_response
from django.http import HttpResponseRedirect
from django.template import RequestContext

def test(request):
	if request.method == "POST": #requestがPOSTかGETか判別
		print request.POST["text"]
		print request.POST["number"]
		print request.POST
		return HttpResponseRedirect("")

	else: #POSTじゃない=GET
		return render_to_response("polls/test.html",RequestContext(request))
)@

@h3 補足
form.htmlの{% csrf_token %}はPOSTをdjangoで使用するときブラウザ攻撃を防ぐラメに必要なものらしいのですが、詳しい説明は公式ドキュメントに投げることにします。
@a:[http://docs.djangoproject.jp/en/latest/ref/contrib/csrf.html] django公式ドキュメント
これを書かないとエラーが出るので忘れないようにしてください。

それで、viewsの方なのですが、if request.method == "POST": の部分でリクエストがPOSTかどうかを判別しています。
POSTじゃない(リクエストがGET)ならテンプレートからtest.htmlを読み込みます。
逆にPOSTだった場合は request.POST["text"] でPOSTで送られてきたデータが辞書形式で読み込めるのでそれをprintで出力した後、リクエストを送ってきたページにリダイレクトしています。

printの代わりにデータベースに保存させたりするようにすれば、色々なものが作れるようになる気がします。
