<p>h3]<br>
はじめに<br>
bcmlの文法は、「シンボル」「タグ」「修飾部」「メインコンテンツ」にわかれます。<br>
</p>
<span class="command">hello world」というファイルをsample.bcmlというファイル名で保存し、</span><p>
bcml&nbsp;sample.bcml<br>
とコマンドをうってください。<br>
パスを通してない場合は、<br>
bcmlフォルダのパス/lib/bcml&nbsp;sample.bcml<br>
としてください。<br>
</p><p>するとこのようなファイルがsample.htmlという名前で出来上がります。<br>
</p><p>pre</p>
<span class="command">hello world</span>
<br>
<span class="command」が修飾部、「hello">world」が「メインコンテンツ」となります。</span>
<p>bcmlは「シンボル」によってbcml記法で書かれている部分がどこかを判別して「タグ」部分に書かれた文字がhtmlのタグ名に相当します。<br>
</p><p>「修飾部」は「修飾子」と「修飾内容」でできておりid、クラス、リンクがデフォルトで指定できます。<br>
この部分についての詳しいことは修飾子の部分を参照してください。<br>
</p><p>ワンライナー記法<br>
bcmlにはワンライナー記法とマルチライナー記法があります。<br>
ワンライナー記法は一行でbcml記法が完結しますが簡潔な記法を使うことができます。<br>
マルチライナー記法は複数行の「メインコンテンツ」を書くことと行の途中でbcml記法を使うことができますが、閉じタグを書かなければならないためワンライナー記法ほどの簡潔さはありません。<br>
</p><p>主にマルチライナー記法はpreタグでコードを載せるときや、行の途中にaタグでリンクを載せるときに便利です。<br>
</p><p>先ほどの例もワンライナー記法で書かれているのでその例で解説します</p>
<span class="command">hello world</span><p>
ワンライナー記法で必要なのは「シンボル」、「タグ」、「修飾部」でできたbcml部文と「メインコンテンツ」なのですがワンライナー記法ではbcml部分とメインコンテンツ部分の間に半角スペースをいれなければなりません。<br>
</p><p>マルチライナー記法<br>
マルチライナー記法は開始シンボル、bcml部分、メインコンテンツ、終了シンボルが必要です。<br>
例を出すと<br>
</p><p>pre<br>
@pre<br>
alert('hello');<br>
@<br>
</p><p>ほかに、このような書き方もできます。<br>
</p><p>pre<br>
alert('hello');@<br>
)@<br>
</p><p>マルチライナー記法は、開始シンボル(デフォルトでは「」)を必要とします。<br>
</p><p>修飾部<br>
bcmlは修飾部によってタグで囲われた文字にリンクとidとクラスをデフォルトでつけることができます。<br>
config.ymlをいじれば修飾子を増やすことができますがこの機能は非推奨です。<br>
</p><p>修飾部の文法はそれがなにを修飾するかを表す（例えば#ならidをつける）修飾子、修飾する内容を表す（idの例で言えばid名）を表す「修飾内容」をスペースを入れずに書きます。<br>
修飾内容にスペースや修飾子にある文字が含まれている場合は[]で囲んでください。<br>
</p><p>例<br>
pre</p>
<span class="class" id="id">hello</span><p>
bcml->@h4.class#id&nbsp;hello</p>
<a href="http://google.com">google</a><p>
bcml->@:[http://google.com]&nbsp;google<br>
</p><p>デフォルトで使える修飾子はidを表す「#」クラスを表す「.」aタグのhref属性持ちで囲まれたリンクを表す「:」です。<br>
修飾子にはタグ名の中に修飾内容を書き込む「インタグ」修飾子の外にタグを作って修飾内容を書き込む(:の場合は修飾内容がhref属性に入ったaタグを作る)「アウトタグ」の２種類があります。<br>
先程の例で言うと「.」「#」はインタグ「:」はアウトタグです。<br>
</p><p>また、シンボルの後のタグを省略して修飾部メインコンテンツとした場合はインタグは自動でspanタグが生成されアウトタグの場合はメインコンテンツをそのままアウトタグの内容で囲みます。<br>
</p><p>特殊タグ<br>
bcmlには今まで述べてきた基本的な文法以外に特殊タグというものがあります。<br>
特殊タグはここの機能に沿って、htmlを自動生成します。<br>
また、特殊タグは他のhtmlにも影響を与える場合があります。<br>
このタグはメインコンテンツを必要とせずワンライナー記法でのシンボル、特殊タグの名前、[]の中に引数を入れたものを必要とします。<br>
</p><p>説明だけではピンとこないと思うので具体例で説明していきます。<br>
</p><p>目次機能<br>
href="h30"&gt;hello&lt;/a&gt;と言ったふうにページ内リンクができるようになった状態で生成されます。<br>
この機能はリンク先のタグにidを設定する必要があるので他のhtmlに影響を与えます。<br>
</p><p>hello<br>
world<br>
hoge<br>
bar<br>
foo<br>
pre<br>
hello<br>
world<br>
hoge<br>
bar<br>
foo<br>
h5]<br>
bcml->@h4&nbsp;hello<br>
bcml->@h5&nbsp;world<br>
bcml->@h6&nbsp;hoge<br>
bcml->@h5&nbsp;bar<br>
bcml->@h4&nbsp;foo<br>
bcml->@mokuzi[h4&nbsp;h5]<br>
</p><p>目次機能は[]の中にどの目次にするか引数をとります。<br>
h3タグを目次にしたい場合は[h3]、h4タグとh5タグを目次にしたい場合は[h4&nbsp;h5]と引数を書きます。<br>
指定できるタグは２つまでになっており２つ指定した場合は先にしたほうが親になりネストするようになっています。<br>
</p><p>リンクにタイトルをつける<br>
ページタイトルを取得するというのはブログなどを書いているとよくやる作業ですが案外デフォルト状態のブラウザでは難しいです。<br>
この機能だとurlのみ書いておけば自動でタイトルタグからページタイトルを取得できます。<br>
</p><p>pre<br>
@:[http://google.com]<br>
bcml->@:[http://google.com]<br>
</p><p>この書き方はタグを書かなかった時の修飾部でリンクをつけようとした時の書き方に似ていますが、内部処理的には別物です。<br>
しかし、bcmlはこのことを意識しなくてもいいように設計されています。<br>
</p><p>コメント<br>
bcmlでは@---、---@で囲まれた部分がコメントになります。<br>
コメントはhtmlに変換されるときには消去されているので変換後のファイルに影響を与えることはありません。<br>
</p><p>カスタマイズ<br>
bcml記法を使用することの大きなメリットとして挙げられるものの一つにカスタマイズができることがありますがその方法をいまから紹介していきます。<br>
</p><p>ユーザータグ<br>
ユーザータグは設定したものに置き換えられます。<br>
ユーザータグの設定はbcml/config.ymlを編集してください。これはyamlファイルなのでyaml記法を使って書いてください。<br>
yamlについてはこちらを参照してください。<br>
@:[http://magazine.rubyist.net/?0009-YAML]<br>
</p><p>設定ファイル<br>
pre<br>
UTAGS:<br>
&nbsp;&nbsp;midasi:<br>
&nbsp;&nbsp;&nbsp;&nbsp;bcml:&nbsp;h3.bbb<br>
&nbsp;&nbsp;るびー:<br>
&nbsp;&nbsp;&nbsp;&nbsp;bcml:&nbsp;pre.[brush:ruby]<br>
</p><p>この設定では@midasiが@h3.bbbのかわり@rubyが@pre.[brush:ruby]の代わりになるようになっています。<br>
</p>
<span class="bbb">hello</span>
<span class="brush:ruby">p "hello"</span><p>
bcml->@h3.bbb&nbsp;hello<br>
p&nbsp;"hello"<br>
)@<br>
</p><p>根本的な設定<br>
pre<br>
GENERAL:<br>
&nbsp;&nbsp;symbol:&nbsp;["!",&nbsp;"![",&nbsp;"]!"]<br>
&nbsp;&nbsp;bracket:&nbsp;["(",&nbsp;")"]<br>
&nbsp;&nbsp;comment:&nbsp;["!---","---!"]<br>
</p><p>こうするとsymbolはワンライナー記法の時!になりマルチライナー記法の時は開始シンボルが![終了シンボルが]!になり、修飾部の修飾内容を囲むものは()になり、コメントは!---&nbsp;---!で囲まれたものになります。<br>
</p><p>つまり<br>
デフォルトだと<br>
hello<br>
world)@<br>
comment&nbsp;---@<br>
となるところを<br>
hello</p>
<a href="http://foo">world ]!</a><p>
comment&nbsp;---!<br>
と書くことができます。<br>
</p>
